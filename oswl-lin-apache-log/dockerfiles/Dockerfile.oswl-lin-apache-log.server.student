#
# Labtainer Dockerfile
#
#  This is the default Labtainer Dockerfile template, plesae choose the appropriate
#  base image below.
#
# The labtainer.base image includes the following packages:
#    build-essential  expect  file  gcc-multilib  gdb  iputils-ping  less  man  manpages-dev 
#    net-tools  openssh-client  python  sudo  tcl8.6  vim  zip  hexedit  rsyslog
#
# The labtainer.network image adds the following packages:
#   openssl openssh-server openvpn wget tcpdump  update-inetd  xinetd
#
ARG registry
FROM $registry/labtainer.base2
FROM $registry/labtainer.firefox
#FROM $registry/labtainer.network
#FROM $registry/labtainer.centos
#FROM $registry/labtainer.lamp
#
#  lab is the fully qualified image name, e.g., mylab.some_container.student
#  labdir is the name of the lab, e.g., mylab 
#  imagedir is the name of the container
#  user_name is the USER from the start.config, if other than ubuntu,
#            then that user must be added in this dockerfile
#            before the USER command
#
ARG lab
ARG labdir
ARG imagedir
ARG user_name
ARG password
ARG apt_source
ARG version
LABEL version=$version
ENV APT_SOURCE $apt_source
RUN /usr/bin/apt-source.sh
#
#  put package installation here, e.g.,
RUN apt-get update
RUN apt-get install -y apache2
CMD ["apachectl", "-D", "FOREGROUND"]
RUN mkdir /var/www/ptit123.com
RUN chown -R $USER:$USER /var/www/ptit123.com
RUN chmod -R 755 /var/www/ptit123.com
RUN echo '<html>' > /var/www/ptit123.com/index.html && \
    echo '    <head>' >> /var/www/ptit123.com/index.html && \
    echo '        <title>Welcome to ptit123.com!</title>' >> /var/www/ptit123.com/index.html && \
    echo '    </head>' >> /var/www/ptit123.com/index.html && \
    echo '    <body>' >> /var/www/ptit123.com/index.html && \
    echo '        <h1>Success! Ptit123.com virtual host is working!</h1>' >> /var/www/ptit123.com/index.html && \
    echo '    </body>' >> /var/www/ptit123.com/index.html && \
    echo '</html>' >> /var/www/ptit123.com/index.html
RUN echo '<VirtualHost *:80>' > /etc/apache2/sites-available/ptit123.com.conf && \
    echo '    ServerAdmin admin@ptit123.com' >> /etc/apache2/sites-available/ptit123.com.conf && \
    echo '    ServerName ptit123.com' >> /etc/apache2/sites-available/ptit123.com.conf && \
    echo '    ServerAlias www.ptit123.com' >> /etc/apache2/sites-available/ptit123.com.conf && \
    echo '    DocumentRoot /var/www/ptit123.com' >> /etc/apache2/sites-available/ptit123.com.conf && \
    echo '    LogLevel debug' >> /etc/apache2/sites-available/ptit123.com.conf && \
    echo '    ErrorLog ${APACHE_LOG_DIR}/error.log' >> /etc/apache2/sites-available/ptit123.com.conf && \
    echo '    CustomLog ${APACHE_LOG_DIR}/access.log combined' >> /etc/apache2/sites-available/ptit123.com.conf && \
    echo '</VirtualHost>' >> /etc/apache2/sites-available/ptit123.com.conf
RUN a2ensite ptit123.com.conf
RUN a2dissite 000-default.conf
RUN apache2ctl configtest
CMD ["apachectl", "-D", "FOREGROUND"]



#     RUN apt-get update && apt-get install -y --no-install-recommends somepackage
#
#
#
# Install the system files found in the _system directory
#
ADD $labdir/$imagedir/sys_tar/sys.tar /
ADD $labdir/sys_$lab.tar.gz /

#
RUN useradd -ms /bin/bash $user_name
RUN echo "$user_name:$password" | chpasswd
RUN adduser $user_name sudo
# replace above with below for centos/fedora
#RUN usermod $user_name -a -G wheel


#
#  **** Perform all root operations, e.g.,           ****
#  **** "apt-get install" prior to the USER command. ****
#
USER $user_name
ENV HOME /home/$user_name
#
# Install files in the user home directory
#
ADD $labdir/$imagedir/home_tar/home.tar $HOME
# remove after docker fixes problem with empty tars
RUN rm -f $HOME/home.tar
ADD $labdir/$lab.tar.gz $HOME
#
#  The first thing that executes on the container.
#
USER root
CMD ["/bin/bash", "-c", "exec /sbin/init --log-target=journal 3>&1"]
